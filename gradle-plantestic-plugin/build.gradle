plugins {
    id 'java'
    id 'groovy'
    id "org.jetbrains.kotlin.jvm"
    id 'maven-publish'
    id 'java-gradle-plugin'
}

dependencies {

}

//
//plugindev {
//    pluginImplementationClass 'de.unia.se.JooqPlugin'
//    pluginDescription '' // TODO
//    pluginLicenses 'Apache-2.0'
//    pluginTags 'gradle', 'plugin', 'plantestic'
//    authorId 'maxammann'
//    authorName 'Max Ammann'
//    authorEmail 'maximilian.ammann@student.uni-augsburg.de'
//    projectUrl 'https://github.com/elite-se/plantestic-team-2/'
//    projectInceptionYear '2020'
//    done()
//}

version 0.1

gradlePlugin {
    plugins {
        create("gradle-plantestic-plugin") {
            id = "de.unia.se.gradle-plantestic-plugin"
            implementationClass = "de.unia.se.PlantesticPlugin"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'gradle-plantestic-plugin'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Plantestic'
                description = 'A concise description of my library'
                url = 'http://www.example.com/library'
                properties = [
                        myProp: "value",
                        "prop.with.dots": "anotherValue"
                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'johnd'
                        name = 'John Doe'
                        email = 'john.doe@example.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://example.com/my-library.git'
                    developerConnection = 'scm:git:ssh://example.com/my-library.git'
                    url = 'http://example.com/my-library/'
                }
            }
        }
    }
    repositories {
        mavenLocal()
    }
}
