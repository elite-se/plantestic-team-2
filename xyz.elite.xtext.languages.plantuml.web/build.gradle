plugins {
    id 'java'
    id "org.xtext.xtend" version "2.0.8"
    id 'de.undercouch.download'
    id 'eclipse'
    id 'idea'
    id 'war'
}
import de.undercouch.gradle.tasks.download.Download

dependencies {
    compile project(':xyz.elite.xtext.languages.plantuml')
    compile project(':xyz.elite.xtext.languages.plantuml.ide')
    compile "org.eclipse.xtext:org.eclipse.xtext.xbase.web:${xtextVersion}"
    compile "org.eclipse.xtext:org.eclipse.xtext.web.servlet:${xtextVersion}"
    compile "org.eclipse.xtend:org.eclipse.xtend.lib:${xtextVersion}"
    compile "org.webjars:requirejs:2.3.2"
    compile "org.webjars:jquery:2.2.4"
    providedCompile "org.eclipse.jetty:jetty-annotations:9.4.9.v20180320"
    providedCompile "org.slf4j:slf4j-simple:1.7.21"
}
def orionDir = file('src/main/webapp/orion')
def orionUrl = 'http://download.eclipse.org/orion/drops/R-11.0-201602232219/built-codeEdit.zip'

task downloadOrion(type: Download) {
    src orionUrl
    dest file("$buildDir/orion/built-codeEdit.zip")
}

task unpackOrion(dependsOn: downloadOrion, type: Copy) {
    from(zipTree(downloadOrion.dest))
    into(orionDir)
}

task jettyRun(type: JavaExec) {
    dependsOn(sourceSets.main.runtimeClasspath, unpackOrion)
    classpath = sourceSets.main.runtimeClasspath.filter { it.exists() }
    main = 'xyz.elite.xtext.languages.plantuml.web.ServerLauncher'
    standardInput = System.in
    group = 'run'
    description = 'Starts an example Jetty server with your language'
}

apply from: "$rootDir/gradle/xtext-source-sets.gradle"

